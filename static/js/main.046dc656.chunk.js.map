{"version":3,"sources":["containers/GithubView/Profile/UserProfile/UserProfile.js","containers/GithubView/Profile/RepoItems/RepoItems.js","containers/GithubView/Profile/Profile.js","containers/GithubView/RepoDetail/RepoDetail.js","classes/github-api/github-api.js","containers/GithubView/GithubView.js","App.js","registerServiceWorker.js","index.js"],"names":["UserProfile","state","expanded","handleExpandClick","_this","setState","classes","this","props","userProfile","gitHubUserProfile","react_default","a","createElement","Card_default","className","card","CardHeader_default","avatar","Avatar_default","aria-label","title","login","subheader","name","CardMedia_default","media","image","avatar_url","CardContent_default","Typography_default","component","bio","CardActions_default","actions","disableActionSpacing","IconButton_default","classnames","expand","Object","defineProperty","expandOpen","onClick","aria-expanded","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","ListItem_default","ListItemText_default","primary","secondary","company","href","blog","target","location","email","hireable","public_repos","public_gists","followers","following","dist_default","format","created_at","Fragment","Component","withStyles","theme","maxWidth","height","paddingTop","backgroundSize","display","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","backgroundColor","red","RepoItems","repoItemsTable","gitHubRepoItems","Paper_default","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","repo","key","id","scope","NavLink","to","Button_default","color","button","repoSelected","description","language","updated_at","width","marginTop","spacing","unit","overflowX","minWidth","Profile","Grid_default","item","xs","sm","Profile_UserProfile_UserProfile","paper","Profile_RepoItems_RepoItems","RepoDetail","repoDetailsTable","gitHubRepoDetails","private","html_url","clone_url","stargazers_count","watchers_count","GithubApi","classCallCheck","getUserList","axiosInstance","get","then","response","data","getUser","username","concat","getReposForUser","getRepoDetails","reposName","axios","baseURL","styles","grow","flexGrow","menuButton","search","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingRight","paddingBottom","paddingLeft","&:focus","GithubViewer","possibleConstructorReturn","getPrototypeOf","call","sideDrawOpen","gitHubUserName","sideDrawToggleHandler","enterKeyPressHandler","event","userName","value","githubApi","repoSelectedHandler","repoName","_this2","AppBar_default","Toolbar_default","Menu_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","onKeyPress","Drawer_default","open","ListItemIcon_default","Home_default","style","container","Switch","Route","path","exact","render","GithubView_Profile_Profile","GithubView_RepoDetail_RepoDetail","App","BrowserRouter","GithubView","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.046dc656.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport red from '@material-ui/core/colors/red';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Moment from 'react-moment'\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        maxWidth: \"90%\",\r\n      },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n    backgroundSize: \"auto\"\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    marginLeft: 'auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginRight: -8,\r\n    },\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n});\r\n\r\nclass UserProfile extends Component {\r\n  state = { expanded: false };\r\n\r\n  handleExpandClick = () => {\r\n    this.setState(state => ({ expanded: !state.expanded }));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    let userProfile = null;\r\n\r\n    if(this.props.gitHubUserProfile){\r\n        userProfile = (\r\n            <Card className={classes.card}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"User\" className={classes.avatar}>\r\n                      U\r\n                  </Avatar>\r\n                }\r\n                title={this.props.gitHubUserProfile.login}\r\n                subheader={this.props.gitHubUserProfile.name}\r\n              />\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={this.props.gitHubUserProfile.avatar_url}\r\n                title={this.props.gitHubUserProfile.login}\r\n              />\r\n              <CardContent>\r\n                <Typography component=\"p\">\r\n                  {this.props.gitHubUserProfile.bio}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions className={classes.actions} disableActionSpacing>\r\n                <IconButton\r\n                  className={classnames(classes.expand, {\r\n                    [classes.expandOpen]: this.state.expanded,\r\n                  })}\r\n                  onClick={this.handleExpandClick}\r\n                  aria-expanded={this.state.expanded}\r\n                  aria-label=\"Show more\"\r\n                >\r\n                  <ExpandMoreIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n              <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Company\" secondary={ this.props.gitHubUserProfile.company } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Blog\" secondary={ <a href={this.props.gitHubUserProfile.blog} target=\"_blank\" >{this.props.gitHubUserProfile.blog}</a> } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Location\" secondary={ this.props.gitHubUserProfile.location } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Email\" secondary={ this.props.gitHubUserProfile.email } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Hireable\" secondary={ this.props.gitHubUserProfile.hireable } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Public Repos\" secondary={ this.props.gitHubUserProfile.public_repos } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Public Gists\" secondary={ this.props.gitHubUserProfile.public_gists } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Followers\" secondary={ this.props.gitHubUserProfile.followers } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Following\" secondary={ this.props.gitHubUserProfile.following } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Created At\" secondary={ <Moment format=\"DD-MM-YYYY HH:mm\">{this.props.gitHubUserProfile.created_at}</Moment>  } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Updated At\" secondary={<Moment format=\"DD-MM-YYYY HH:mm\">{this.props.gitHubUserProfile.created_at}</Moment>  } />\r\n                    </ListItem>\r\n                </List>\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {userProfile}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nUserProfile.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserProfile);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'react-moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nclass RepoItems extends Component {\r\n\r\n    \r\n\r\n  render() {\r\n\r\n    let repoItemsTable = null;\r\n    if(this.props.gitHubRepoItems){\r\n        repoItemsTable = (\r\n            <Paper className={this.props.classes.root}>\r\n              <Table className={this.props.classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Repo Name</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Langauage</TableCell>\r\n                    <TableCell>Last Updated</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.props.gitHubRepoItems.map(repo => {\r\n                    return (\r\n                      <TableRow key={repo.id}>\r\n                        <TableCell component=\"th\" scope=\"row\" >\r\n                          <NavLink to=\"/repo-detail/\">\r\n                              <Button\r\n                                  color=\"primary\"\r\n                                  className={this.props.classes.button}\r\n                                  onClick={() => this.props.repoSelected(repo.name)}>{repo.name}\r\n                              </Button>\r\n                          </NavLink>\r\n                        </TableCell>\r\n                        <TableCell>{repo.description}</TableCell>\r\n                        <TableCell>{repo.language}</TableCell>\r\n                        <TableCell>\r\n                            <Moment format=\"DD-MM-YYYY HH:mm\">\r\n                                {repo.updated_at}\r\n                            </Moment>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          );\r\n    }\r\n\r\n\r\n      return (\r\n       <>\r\n        {repoItemsTable}\r\n       </>\r\n      );\r\n  }\r\n}\r\n\r\nRepoItems.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RepoItems);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport UserProfile from './UserProfile/UserProfile';\r\nimport RepoItems from './RepoItems/RepoItems';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({});\r\n  \r\nclass Profile extends Component {\r\n\r\n    render() {\r\n        return (<>\r\n        <Grid item xs={12} sm={6}>\r\n          <UserProfile gitHubUserProfile={this.props.gitHubUserProfile} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={ this.props.classes.paper}>\r\n            <RepoItems gitHubRepoItems={this.props.gitHubRepoItems} repoSelected={this.props.repoSelected} />\r\n          </Paper>\r\n        </Grid>\r\n        </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nProfile.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n\r\nexport default withStyles(styles)(Profile);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'react-moment';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nclass RepoDetail extends Component {\r\n\r\n    \r\n\r\n  render() {\r\n\r\n    let repoDetailsTable = null;\r\n    if(this.props.gitHubRepoDetails){\r\n        repoDetailsTable = (\r\n        <Grid item xs={12}>\r\n            <Paper className={this.props.classes.root}>\r\n              <Table className={this.props.classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell>Info</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow >\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Private\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.private}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Html URL\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.html_url}\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Description\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.description}\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Created at\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <Moment>{this.props.gitHubRepoDetails.created_at}</Moment>\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Updated at\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <Moment>{this.props.gitHubRepoDetails.updated_at}</Moment>\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Clone URL\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.clone_url}\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Stargazers Count\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.stargazers_count}\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Watchers Count\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.watchers_count}\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Language\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {this.props.gitHubRepoDetails.language}\r\n                        </TableCell>\r\n                    <TableRow>\r\n                    </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n            </Grid>\r\n          );\r\n    }\r\n      return (\r\n       <>\r\n        {repoDetailsTable}\r\n       </>\r\n      );\r\n  }\r\n}\r\n\r\nRepoDetail.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RepoDetail);","import axios from 'axios';\r\n\r\nclass GithubApi {\r\n\r\n    constructor() {\r\n        this.axiosInstance = axios.create({\r\n            baseURL: \"https://api.github.com\"\r\n        });\r\n\r\n    }\r\n\r\n    getUserList = () => {\r\n        return this.axiosInstance.get(`/users`)\r\n        .then(response => {\r\n            return response.data\r\n        });\r\n    }\r\n\r\n    getUser = (username) => {\r\n        return this.axiosInstance.get(`/users/${username}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n\r\n    getReposForUser = (username) => {\r\n        return this.axiosInstance.get(`/users/${username}/repos`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n\r\n    getRepoDetails = (username, reposName) => {\r\n        return this.axiosInstance.get(`repos/${username}/${reposName}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default GithubApi;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\n\r\nimport Profile from './Profile/Profile';\r\nimport RepoDetail from './RepoDetail/RepoDetail';\r\nimport GithubApi from '../../classes/github-api/github-api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nclass GithubViewer extends Component {\r\n\r\n  state = { \r\n    sideDrawOpen: false,\r\n    gitHubUserName: null,\r\n    gitHubUserProfile: null,\r\n    gitHubRepoItems: null,\r\n    gitHubRepoDetails: null\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.githubApi = new GithubApi();\r\n  }\r\n\r\n  sideDrawToggleHandler = () => {\r\n    this.setState({sideDrawOpen: !this.state.sideDrawOpen});\r\n  }\r\n\r\n  enterKeyPressHandler = (event) => {\r\n    if(event.key === 'Enter'){\r\n      //clear previous data\r\n      this.setState({\r\n        gitHubUserName: null,\r\n        gitHubUserProfile: null,\r\n        gitHubRepoItems: null,\r\n        gitHubRepoDetails: null\r\n      });\r\n\r\n      const userName = event.target.value;\r\n      this.setState({gitHubUserName: userName});\r\n      this.githubApi.getUser(userName).then(response => {\r\n        this.setState({gitHubUserProfile: response})\r\n      });\r\n      this.githubApi.getReposForUser(userName).then(response => {\r\n        this.setState({gitHubRepoItems: response})\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  repoSelectedHandler = (repoName) => {\r\n      if(this.state.gitHubUserName){\r\n        this.githubApi.getRepoDetails(this.state.gitHubUserName, repoName).then(response => {\r\n          this.setState({gitHubRepoDetails: response});\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className={this.props.classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={this.props.classes.menuButton} onClick={this.sideDrawToggleHandler} color=\"inherit\" aria-label=\"Open drawer\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography className={this.props.classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n              Github Viewer\r\n            </Typography>\r\n            <div className={this.props.classes.grow} />\r\n            <div className={this.props.classes.search}>\r\n              <div className={this.props.classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Enter Username\"\r\n                classes={{\r\n                  root: this.props.classes.inputRoot,\r\n                  input: this.props.classes.inputInput,\r\n                }}\r\n                onKeyPress={this.enterKeyPressHandler}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer open={this.state.sideDrawOpen} onClick={this.sideDrawToggleHandler} >\r\n        <List>\r\n        <NavLink to=\"/\">\r\n            <ListItem button >\r\n              <ListItemIcon> <HomeIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n        </NavLink>\r\n        </List>\r\n          </Drawer>\r\n      </div>\r\n      <div style={styles.grow}>\r\n        <Grid container spacing={24}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={() => <Profile\r\n                                                    gitHubUserProfile={this.state.gitHubUserProfile}\r\n                                                    gitHubRepoItems={this.state.gitHubRepoItems} \r\n                                                    repoSelected={this.repoSelectedHandler} />}   />\r\n                    <Route path=\"/repo-detail/\" exact render={() => <RepoDetail \r\n                                                               gitHubRepoDetails={this.state.gitHubRepoDetails} /> }  />\r\n                </Switch>\r\n        </Grid>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nGithubViewer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GithubViewer);\r\n","import React, { Component } from 'react';\nimport GithubView from './containers/GithubView/GithubView';\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <GithubView />\n     </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}